{"ast":null,"code":"var _jsxFileName = \"/home/nicholasnops/MyBooks/frontend/src/components/Books/willread/WillRead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './willread.css';\nimport 'material-icons';\nimport 'materialize-css';\nimport Card from '../../card/card';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { storage } from '../../../firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WillRead() {\n  _s();\n\n  const [modal, showModal] = useState(false);\n  const [bookCover, setCover] = useState(null);\n  const [bookTitle, setTtile] = useState('');\n  const [bookDesc, setDesc] = useState('');\n  const [bookUrl, setUrl] = useState('');\n  useEffect(() => {}, [bookUrl, bookCover]);\n\n  const handleImg = () => {\n    let imgID = uuidv4();\n\n    if (bookCover === \"\" && bookTitle === \"\" && bookDesc === \"\") {\n      alert(\"Some of the fields are empty\");\n    } else {\n      const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\n      uploadTask.on('state_changed', snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(imgID).getDownloadURL().then(url => {\n          let bookData = {\n            \"bookCover\": url,\n            \"bookTitle\": bookTitle,\n            \"bookDesc\": bookDesc\n          };\n          axios.post('http://localhost:3002/api/insert', bookData);\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal__container\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal__open__button\",\n      onClick: () => showModal(modal ? false : true),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons btn3\",\n        children: \" library_add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), \" \", modal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__content\",\n        children: [\"Book cover : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Book ISBN\",\n          onChange: e => setCover(e.target.files[0]),\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Book Title\",\n          onChange: e => setTtile(e.target.value),\n          type: \"text\",\n          id: \"bookTitle\",\n          className: \"modal__book__title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Short description\",\n          onChange: e => setDesc(e.target.value),\n          id: \"bookDesc\",\n          type: \"text\",\n          className: \"modal__book__description\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal__btn__send\",\n          onClick: handleImg,\n          type: \"submit\",\n          value: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal__btn_close\",\n          onClick: () => showModal(false),\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), \" \", bookUrl, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : '', \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 14\n  }, this);\n}\n\n_s(WillRead, \"e/tIRc+dx3RGjKRvw6RIQC6N29E=\");\n\n_c = WillRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"WillRead\");","map":{"version":3,"sources":["/home/nicholasnops/MyBooks/frontend/src/components/Books/willread/WillRead.js"],"names":["React","useState","useEffect","Card","v4","uuidv4","axios","storage","WillRead","modal","showModal","bookCover","setCover","bookTitle","setTtile","bookDesc","setDesc","bookUrl","setUrl","handleImg","imgID","alert","uploadTask","ref","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","bookData","post","e","target","files","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAO,gBAAP;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACU,SAAD,EAAYC,QAAZ,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,QAAZ,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,OAAX,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,OAAD,EAAUC,MAAV,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,CAACe,OAAD,EAAUN,SAAV,CAHM,CAAT;;AAIA,QAAMQ,SAAS,GAAG,MAAM;AACpB,QAAIC,KAAK,GAAGf,MAAM,EAAlB;;AAEA,QAAIM,SAAS,KAAK,EAAd,IAAoBE,SAAS,KAAK,EAAlC,IAAwCE,QAAQ,KAAK,EAAzD,EAA6D;AAEzDM,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KAHD,MAGO;AACH,YAAMC,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,UAASH,KAAM,EAA5B,EAA+BI,GAA/B,CAAmCb,SAAnC,CAAnB;AACAW,MAAAA,UAAU,CAACG,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI,CAAE,CAFlB,EAGIC,KAAK,IAAI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OALL,EAMI,MAAM;AACFpB,QAAAA,OAAO,CACFgB,GADL,CACS,QADT,EAEKO,KAFL,CAEWV,KAFX,EAGKW,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACT,cAAIC,QAAQ,GAAG;AACX,yBAAaD,GADF;AAEX,yBAAapB,SAFF;AAGX,wBAAYE;AAHD,WAAf;AAKAT,UAAAA,KAAK,CAAC6B,IAAN,CAAW,kCAAX,EAA+CD,QAA/C;AACH,SAXL;AAYH,OAnBL;AAsBH;AACJ,GA/BD;;AAiCA,sBAAS;AACD,IAAA,SAAS,EAAG,kBADX;AAAA,4BAEL,QACA,IADA;AAAA;AAAA;AAAA;AAAA,YAFK,eAIL;AACO,MAAA,SAAS,EAAG,qBADnB;AAEA,MAAA,OAAO,EACH,MAAOxB,SAAS,CAACD,KAAK,GAAG,KAAH,GAAW,IAAjB,CAHpB;AAAA,mCAGgD;AAAO,QAAA,SAAS,EAAG,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJK,OAQDA,KAAK,gBACL;AACI,MAAA,SAAS,EAAG,aADhB;AAAA,8BAEA;AACI,QAAA,SAAS,EAAG,gBADhB;AAAA,iDAEa;AAAQ,UAAA,WAAW,EAAG,WAAtB;AACb,UAAA,QAAQ,EACH2B,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAFN;AAGb,UAAA,IAAI,EAAG;AAHM;AAAA;AAAA;AAAA;AAAA,gBAFb,eAMA;AACM,UAAA,WAAW,EAAG,YADpB;AAEA,UAAA,QAAQ,EACHF,CAAD,IAAOtB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASE,KAAV,CAHnB;AAIA,UAAA,IAAI,EAAG,MAJP;AAKA,UAAA,EAAE,EAAG,WALL;AAMA,UAAA,SAAS,EAAG;AANZ;AAAA;AAAA;AAAA;AAAA,gBANA,eAaA;AACS,UAAA,WAAW,EAAG,mBADvB;AAEA,UAAA,QAAQ,EACHH,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASE,KAAV,CAHlB;AAIA,UAAA,EAAE,EAAG,UAJL;AAKA,UAAA,IAAI,EAAG,MALP;AAMA,UAAA,SAAS,EAAG,0BANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA,oBAmBsD;AAChD,UAAA,SAAS,EAAG,kBADoC;AAEtD,UAAA,OAAO,EAAKpB,SAF0C;AAGtD,UAAA,IAAI,EAAG,QAH+C;AAItD,UAAA,KAAK,EAAG;AAJ8C;AAAA;AAAA;AAAA;AAAA,gBAnBtD,eAwBA;AACO,UAAA,SAAS,EAAG,kBADnB;AAEA,UAAA,OAAO,EACH,MAAOT,SAAS,CAAC,KAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBA,OA2BqDO,OA3BrD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAgCE,EAxCN;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AA8CH;;GA1FuBT,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './willread.css';\nimport 'material-icons';\nimport 'materialize-css'\nimport Card from '../../card/card';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { storage } from '../../../firebase/firebase';\n\nexport default function WillRead() {\n    const [modal, showModal] = useState(false);\n    const [bookCover, setCover] = useState(null);\n    const [bookTitle, setTtile] = useState('');\n    const [bookDesc, setDesc] = useState('');\n    const [bookUrl, setUrl] = useState('');\n\n    useEffect(() => {\n\n\n    }, [bookUrl, bookCover])\n    const handleImg = () => {\n        let imgID = uuidv4();\n\n        if (bookCover === \"\" && bookTitle === \"\" && bookDesc === \"\") {\n\n            alert(\"Some of the fields are empty\");\n        } else {\n            const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\n            uploadTask.on(\n                'state_changed',\n                snapshot => {},\n                error => {\n                    console.log(error);\n                },\n                () => {\n                    storage\n                        .ref('images')\n                        .child(imgID)\n                        .getDownloadURL()\n                        .then(url => {\n                            let bookData = {\n                                \"bookCover\": url,\n                                \"bookTitle\": bookTitle,\n                                \"bookDesc\": bookDesc,\n                            }\n                            axios.post('http://localhost:3002/api/insert', bookData)\n                        })\n                }\n\n            );\n        }\n    }\n\n    return ( <\n        div className = 'modal__container' >\n        <\n        Card / >\n        <\n        button className = \"modal__open__button\"\n        onClick = {\n            () => (showModal(modal ? false : true)) } > < span className = \"material-icons btn3\" > library_add < /span></button > {\n            modal ?\n            <\n            div className = 'modal__body' >\n            <\n            div className = \"modal__content\" >\n            Book cover : < input placeholder = \"Book ISBN\"\n            onChange = {\n                (e) => setCover(e.target.files[0]) }\n            type = \"file\" / >\n            <\n            input placeholder = \"Book Title\"\n            onChange = {\n                (e) => setTtile(e.target.value) }\n            type = \"text\"\n            id = \"bookTitle\"\n            className = \"modal__book__title\" / >\n            <\n            textarea placeholder = \"Short description\"\n            onChange = {\n                (e) => setDesc(e.target.value) }\n            id = \"bookDesc\"\n            type = \"text\"\n            className = \"modal__book__description\" > < /textarea> <\n            input className = 'modal__btn__send'\n            onClick = { handleImg }\n            type = \"submit\"\n            value = \"add\" / >\n            <\n            button className = 'modal__btn_close'\n            onClick = {\n                () => (showModal(false)) } > Cancel < /button> { bookUrl } <\n            /div> <\n            /div>: ''\n        } <\n        /div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}