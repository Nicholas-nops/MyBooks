{"ast":null,"code":"var _jsxFileName = \"/home/nicholasnops/MyBooks/frontend/src/components/Books/willread/WillRead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./willread.css\";\nimport \"material-icons\";\nimport \"materialize-css\";\nimport Card from \"../../card/card\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { storage } from \"../../../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WillRead() {\n  _s();\n\n  const [modal, showModal] = useState(false);\n  const [bookCover, setCover] = useState(null);\n  const [bookTitle, setTtile] = useState(\"\");\n  const [bookDesc, setDesc] = useState(\"\");\n  const [bookUrl, setUrl] = useState(\"\");\n  useEffect(() => {}, [bookUrl, bookCover]);\n\n  const handleImg = () => {\n    let imgID = uuidv4();\n\n    if (bookCover === \"\" && bookTitle === \"\" && bookDesc === \"\") {\n      alert(\"Some of the fields are empty\");\n    } else {\n      const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\n      uploadTask.on(\"state_changed\", snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(\"images\").child(imgID).getDownloadURL().then(url => {\n          let bookData = {\n            bookCover: url,\n            bookTitle: bookTitle,\n            bookDesc: bookDesc\n          };\n          axios.post(\"http://localhost:3002/api/insert\", bookData);\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal__container\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal__open__button\",\n      onClick: () => showModal(modal ? false : true),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons btn3\",\n        children: \"library_add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), modal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__content\",\n        children: [\"Book cover:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Book ISBN\",\n          onChange: e => setCover(e.target.files[0]),\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Book Title\",\n          onChange: e => setTtile(e.target.value),\n          type: \"text\",\n          id: \"bookTitle\",\n          className: \"modal__book__title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Short description\",\n          onChange: e => setDesc(e.target.value),\n          id: \"bookDesc\",\n          type: \"text\",\n          className: \"modal__book__description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal__btn__send\",\n          onClick: handleImg,\n          type: \"submit\",\n          value: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal__btn_close\",\n          onClick: () => showModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), bookUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WillRead, \"LF4oPci90XAthzs+fI0ie455yis=\");\n\n_c = WillRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"WillRead\");","map":{"version":3,"sources":["/home/nicholasnops/MyBooks/frontend/src/components/Books/willread/WillRead.js"],"names":["React","useState","useEffect","Card","v4","uuidv4","axios","storage","WillRead","modal","showModal","bookCover","setCover","bookTitle","setTtile","bookDesc","setDesc","bookUrl","setUrl","handleImg","imgID","alert","uploadTask","ref","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","bookData","post","e","target","files","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./willread.css\";\nimport \"material-icons\";\nimport \"materialize-css\";\nimport Card from \"../../card/card\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { storage } from \"../../../firebase/firebase\";\n\nexport default function WillRead() {\n  const [modal, showModal] = useState(false);\n  const [bookCover, setCover] = useState(null);\n  const [bookTitle, setTtile] = useState(\"\");\n  const [bookDesc, setDesc] = useState(\"\");\n  const [bookUrl, setUrl] = useState(\"\");\n\n  useEffect(() => {}, [bookUrl, bookCover]);\n  const handleImg = () => {\n    let imgID = uuidv4();\n\n    if (bookCover === \"\" && bookTitle === \"\" && bookDesc === \"\") {\n      alert(\"Some of the fields are empty\");\n    } else {\n      const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          storage\n            .ref(\"images\")\n            .child(imgID)\n            .getDownloadURL()\n            .then((url) => {\n              let bookData = {\n                bookCover: url,\n                bookTitle: bookTitle,\n                bookDesc: bookDesc,\n              };\n              axios.post(\"http://localhost:3002/api/insert\", bookData);\n            });\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"modal__container\">\n      <Card />\n      <button\n        className=\"modal__open__button\"\n        onClick={() => showModal(modal ? false : true)}\n      >\n        <span className=\"material-icons btn3\">library_add</span>\n      </button>\n      {modal ? (\n        <div className=\"modal__body\">\n          <div className=\"modal__content\">\n            Book cover:{\" \"}\n            <input\n              placeholder=\"Book ISBN\"\n              onChange={(e) => setCover(e.target.files[0])}\n              type=\"file\"\n            />\n            <input\n              placeholder=\"Book Title\"\n              onChange={(e) => setTtile(e.target.value)}\n              type=\"text\"\n              id=\"bookTitle\"\n              className=\"modal__book__title\"\n            />\n            <textarea\n              placeholder=\"Short description\"\n              onChange={(e) => setDesc(e.target.value)}\n              id=\"bookDesc\"\n              type=\"text\"\n              className=\"modal__book__description\"\n            ></textarea>\n            <input\n              className=\"modal__btn__send\"\n              onClick={handleImg}\n              type=\"submit\"\n              value=\"add\"\n            />\n            <button\n              className=\"modal__btn_close\"\n              onClick={() => showModal(false)}\n            >\n              Cancel\n            </button>\n            {bookUrl}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}