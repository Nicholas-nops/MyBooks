{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicho\\\\Desktop\\\\React projects\\\\MyBooks-master\\\\frontend\\\\src\\\\components\\\\Books\\\\willread\\\\WillRead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './willread.css';\nimport 'material-icons';\nimport 'materialize-css';\nimport Card from '../../card/card';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { storage } from '../../../firebase/firebase';\nexport default function WillRead() {\n  _s();\n\n  const [modal, showModal] = useState(false);\n  const [bookCover, setCover] = useState('');\n  const [bookTitle, setTtile] = useState('');\n  const [bookDesc, setDesc] = useState('');\n  const [bookUrl, setUrl] = useState('');\n\n  const handleImg = async () => {\n    let imgID = uuidv4();\n    const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\n    uploadTask.on('state_changed', snapshot => {}, error => {\n      console.log(error);\n    }, () => {\n      storage.ref('images').child(imgID).getDownloadURL().then(url => {\n        setUrl(url);\n        console.log(bookUrl);\n      });\n    });\n    await handleUpload();\n  };\n\n  const handleUpload = () => {\n    let bookData = {\n      \"bookCover\": bookUrl,\n      \"bookTitle\": bookTitle,\n      \"bookDesc\": bookDesc\n    };\n    axios.post('http://localhost:3002/api/insert', bookData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formdiv3\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn3\",\n        onClick: () => showModal(modal ? false : true),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons btn3\",\n          children: \"library_add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), modal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [\"Book cover: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Book ISBN\",\n            onChange: e => setCover(e.target.files[0]),\n            type: \"file\",\n            id: \"bookCover\",\n            className: \"modal__book_cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Book Title\",\n            onChange: e => setTtile(e.target.value),\n            type: \"text\",\n            id: \"bookTitle\",\n            className: \"modal__book__title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Short description\",\n            onChange: e => setDesc(e.target.value),\n            id: \"bookDesc\",\n            type: \"text\",\n            className: \"modal__book__description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btnSend\",\n            onClick: handleImg,\n            type: \"submit\",\n            value: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnClose\",\n            onClick: () => showModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WillRead, \"9J4e8C+023RCNU8h6SX3tZPHJpY=\");\n\n_c = WillRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"WillRead\");","map":{"version":3,"sources":["C:/Users/nicho/Desktop/React projects/MyBooks-master/frontend/src/components/Books/willread/WillRead.js"],"names":["React","useState","Card","v4","uuidv4","axios","storage","WillRead","modal","showModal","bookCover","setCover","bookTitle","setTtile","bookDesc","setDesc","bookUrl","setUrl","handleImg","imgID","uploadTask","ref","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","handleUpload","bookData","post","e","target","files","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './willread.css';\r\nimport 'material-icons';\r\nimport 'materialize-css'\r\nimport Card from '../../card/card';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { storage } from '../../../firebase/firebase';\r\n\r\n\r\nexport default function WillRead() {\r\n    const [modal, showModal] = useState(false);\r\n    const [bookCover, setCover] = useState('');\r\n    const [bookTitle, setTtile] = useState('');\r\n    const [bookDesc, setDesc] = useState('');\r\n    const [bookUrl, setUrl] = useState('');\r\n\r\n    const handleImg = async () => {\r\n        let imgID = uuidv4();\r\n\r\n\r\n        const uploadTask = storage.ref(`images/${imgID}`).put(bookCover);\r\n        uploadTask.on(\r\n            'state_changed',\r\n            snapshot => { },\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref('images')\r\n                    .child(imgID)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        setUrl(url);\r\n                        console.log(bookUrl);\r\n                })\r\n            }\r\n        );\r\n        await handleUpload();\r\n    }\r\n    const handleUpload = () => {\r\n        let bookData = {\r\n            \"bookCover\": bookUrl,\r\n            \"bookTitle\": bookTitle,\r\n            \"bookDesc\": bookDesc,\r\n        }\r\n        axios.post('http://localhost:3002/api/insert', bookData)\r\n    }\r\n\r\n    return (\r\n        <div className='body'>\r\n            <div className=\"formdiv3\">\r\n                <Card />\r\n                <button className='btn3' onClick={() => (showModal(modal ? false : true))} ><span className=\"material-icons btn3\">library_add</span></button>\r\n                {\r\n                    modal ?\r\n                        <div className='modalBody'>\r\n                            <div className=\"modal-content\">\r\n                                Book cover: <input placeholder=\"Book ISBN\" onChange={(e) => setCover(e.target.files[0])} type=\"file\" id=\"bookCover\" className=\"modal__book_cover\" />\r\n                                <input placeholder=\"Book Title\" onChange={(e) => setTtile(e.target.value)} type=\"text\" id=\"bookTitle\" className=\"modal__book__title\" />\r\n                                <input placeholder=\"Short description\" onChange={(e) => setDesc(e.target.value)} id=\"bookDesc\" type=\"text\" className=\"modal__book__description\" />\r\n                                <input className='btnSend' onClick={handleImg} type=\"submit\" value=\"add\" />\r\n                                <button className='btnClose' onClick={() => (showModal(false))}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}